{"version":3,"sources":["ToDo.js","ToDoForm.js","App.js","reportWebVitals.js","index.js"],"names":["ToDo","todo","toggleTask","removeTask","className","complete","onClick","id","task","ToDoForm","addTask","useState","userInput","setUserInput","handleSubmit","e","preventDefault","onSubmit","value","type","onChange","currentTarget","onKeyDown","key","placeholder","App","todos","setTodos","filter","handleToggle","map","length","newItem","Math","random","toString","substr","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mNAgBeA,MAhBf,YAAiD,IAAjCC,EAAgC,EAAhCA,KAAMC,EAA0B,EAA1BA,WAAYC,EAAc,EAAdA,WAC9B,OACI,sBAAmBC,UAAU,YAA7B,UACI,qBACIA,UAAWH,EAAKI,SAAW,mBAAqB,YAChDC,QAAS,kBAAMJ,EAAWD,EAAKM,KAFnC,SAIKN,EAAKO,OAEV,qBAAKJ,UAAU,cAAcE,QAAS,kBAAMH,EAAWF,EAAKM,KAA5D,iBAPMN,EAAKM,KCiCRE,MAjCf,YAAgC,IAAZC,EAAW,EAAXA,QAChB,EAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAMMC,EAAe,SAACC,GAClBA,EAAEC,iBACFN,EAAQE,GACRC,EAAa,KASjB,OACI,uBAAMI,SAAUH,EAAhB,UACI,uBACII,MAAON,EACPO,KAAK,OACLC,SArBS,SAACL,GAClBF,EAAcE,EAAEM,cAAcH,QAqBtBI,UAZW,SAACP,GACN,UAAVA,EAAEQ,KACFT,EAAaC,IAWTS,YAAY,sBAEhB,6CCqBGC,MA/Cf,WACE,MAA0Bd,mBAAS,IAAnC,mBAAOe,EAAP,KAAcC,EAAd,KAcMxB,EAAa,SAACI,GAClBoB,EAAS,YAAID,EAAME,QAAO,SAAC3B,GAAD,OAAUA,EAAKM,KAAOA,QAG5CsB,EAAe,SAACtB,GACpBoB,EAAS,YACFD,EAAMI,KAAI,SAAC7B,GAAD,OACbA,EAAKM,KAAOA,EAAZ,2BAAqBN,GAArB,IAA2BI,UAAWJ,EAAKI,WAA3C,eAA2DJ,SAKjE,OACE,sBAAKG,UAAU,MAAf,UACJ,iCACE,gDAAmBsB,EAAMK,YAErB,cAAC,EAAD,CAAUrB,QA7BE,SAACE,GACf,GAAIA,EAAW,CACb,IAAMoB,EAAU,CACdzB,GAAI0B,KAAKC,SAASC,SAAS,IAAIC,OAAO,EAAE,GACxC5B,KAAMI,EACNP,UAAU,GAEZsB,EAAS,GAAD,mBAAKD,GAAL,CAAYM,SAuBnBN,EAAMI,KAAI,SAAC7B,GACV,OACI,cAAC,EAAD,CACIA,KAAMA,EAENC,WAAY2B,EACZ1B,WAAYA,GAFPF,EAAKM,WC7BX8B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7fa539ab.chunk.js","sourcesContent":["function ToDo({ todo, toggleTask, removeTask }) {\r\n    return (\r\n        <div key={todo.id} className=\"item-todo\">\r\n            <div\r\n                className={todo.complete ? \"item-text strike\" : \"item-text\"}\r\n                onClick={() => toggleTask(todo.id)}\r\n            >\r\n                {todo.task}\r\n            </div>\r\n            <div className=\"item-delete\" onClick={() => removeTask(todo.id)}>\r\n                X\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ToDo","import { useState } from \"react\";\r\n\r\nfunction ToDoForm({ addTask }) {\r\n    const [userInput, setUserInput] = useState(\"\")\r\n\r\n    const handleChange = (e) => {\r\n        setUserInput (e.currentTarget.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        addTask(userInput)\r\n        setUserInput(\"\")\r\n    }\r\n\r\n    const handleKeyPress = (e) => {\r\n        if (e.key === \"Enter\") {\r\n            handleSubmit(e)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                value={userInput}\r\n                type=\"text\"\r\n                onChange={handleChange}\r\n                onKeyDown={handleKeyPress}\r\n                placeholder=\"Your task here...\"\r\n            />\r\n            <button>Add</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default ToDoForm","import { useState } from \"react\";\nimport ToDo from \"./ToDo\";\nimport ToDoForm from \"./ToDoForm\";\n\nfunction App() {\n  const [todos, setTodos] = useState([])\n\n  const addTask = (userInput) => {\n    if (userInput) {\n      const newItem = {\n        id: Math.random().toString(36).substr(2,9),\n        task: userInput,\n        complete: false\n      }\n      setTodos([...todos, newItem])\n    }\n\n  }\n\n  const removeTask = (id) => {\n    setTodos([...todos.filter((todo) => todo.id !== id)])\n  }\n\n  const handleToggle = (id) => {\n    setTodos([\n        ...todos.map((todo) =>\n        todo.id === id ? {...todo, complete: !todo.complete} : {...todo}\n        )\n    ])\n  }\n\n  return (\n    <div className=\"App\">\n<header>\n  <h1>Active tasks: {todos.length}</h1>\n</header>\n      <ToDoForm addTask={addTask} />\n      {todos.map((todo) => {\n        return (\n            <ToDo\n                todo={todo}\n                key={todo.id}\n                toggleTask={handleToggle}\n                removeTask={removeTask}\n            />\n        )\n      })}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}